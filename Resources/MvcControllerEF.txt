using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using *NS*.Data;
using *NS*.Models;
using *NS*.Repository;

namespace *NS*.Controllers
{
    public class *CL*Controller : Controller
    {
        private readonly ILogger<*CL*Controller> _logger;
        private IDataRepository<*CL*> db { get; set; }
        
        public *CL*Controller(ILogger<*CL*Controller> logger, IDataRepository<*CL*> context)
        {
            _logger = logger;
            db = context;
        }

        public IActionResult Index()
        {
            var data = db.ReadAll().Select(x => x).ToList();
            return View(data);
        }

       public IActionResult Create()
        {
            var data = new *CL*();
            return View(data);
        }

          [HttpPost]
        public IActionResult Create(*CL* data)
        {
            db.Create(data);
            return RedirectToAction("Index");
        }

         public IActionResult Read(int id)
        {
            var data = db.Read(id);
            return View(data);
        }

        public IActionResult Update(int id)
        {
            var data = db.Read(id);
            return View(data);
        }

        [HttpPost]
        public IActionResult Update(*CL* data)
        {
            db.Update(data);
            return View(data);
        }

         public IActionResult Delete(*CL* data)
        {
            db.Delete(data);
            return RedirectToAction("Index");
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}
