//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutomationControls.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutomationControls.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ArrayList&lt;BtDataReceiveListener&gt; btDataReceiveListeners = new ArrayList&lt;BtDataReceiveListener&gt; ();
        ///public interface BtDataReceiveListener  {  void onBtDataReceiveListener(args); }
        ///public void setBtDataReceiveListener (BtDataReceiveListener  btDataReceiveListener)  { this.btDataReceiveListeners.add(btDataReceiveListener); }
        ///void UpdateBtDataReceiveListeners(args) {
        ///for (BtDataReceiveListener listener : btDataReceiveListeners) { listener.onBtDataReceiveListener(args); } }
        ///
        ///
        ///
        ///.
        /// </summary>
        internal static string Android_Event_Pattern {
            get {
                return ResourceManager.GetString("Android_Event_Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	 public *ClassName* deserialize(String path, Context c) {
        ///		*ClassName* ret = new *ClassName*();
        ///			try {
        ///				Type listType = new TypeToken&lt;*ClassName*&gt;() {}.getType();
        ///				Gson gson = new GsonBuilder().registerTypeAdapter(listType, new *ClassName*.*ClassName*Serializer()).create();
        ///				String result = gson.toJson(this, listType);
        ///				 ret = gson.fromJson(ReadFromFile(path, c), listType);
        ///			}
        ///			catch(Throwable t) { }	
        ///			return ret;
        ///	}
        ///
        ///	.
        /// </summary>
        internal static string Android_GSON_Deserialize {
            get {
                return ResourceManager.GetString("Android_GSON_Deserialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static class *ClassName*Deserializer implements JsonDeserializer&lt;*ClassName*&gt; {
        ///
        ///		public *ClassName*Deserializer() { super(); }
        ///
        ///		@Override
        ///		public *ClassName* deserialize(JsonElement json, Type type, JsonDeserializationContext c) throws JsonParseException {
        ///			
        ///			*ClassName* ret = new *ClassName*();
        ///			JsonObject jobj =(JsonObject) json;
        ///			*1-1*		
        ///			return ret;
        ///		}
        ///}.
        /// </summary>
        internal static string Android_GSON_Deserializer {
            get {
                return ResourceManager.GetString("Android_GSON_Deserializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package *packageName*;
        ///
        ///import java.io.IOException;
        ///import java.lang.reflect.Type;
        ///import com.google.gson.Gson;
        ///import com.google.gson.GsonBuilder;
        ///import com.google.gson.JsonDeserializationContext;
        ///import com.google.gson.JsonDeserializer;
        ///import com.google.gson.JsonElement;
        ///import com.google.gson.JsonObject;
        ///import com.google.gson.JsonParseException;
        ///import com.google.gson.JsonSerializationContext;
        ///import com.google.gson.JsonSerializer;
        ///import java.io.*;
        ///import com.google.gson.annotations.Ser [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Android_GSON_Pattern {
            get {
                return ResourceManager.GetString("Android_GSON_Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public boolean Serialize(String path, Context c) {
        ///		 
        ///			try {
        ///				Type listType = new TypeToken&lt;*ClassName*&gt;() {}.getType();
        ///				Gson gson = new GsonBuilder().registerTypeAdapter(listType, new *ClassName*.*ClassName*Serializer()).create();
        ///				String result = gson.toJson(this, listType);
        ///				WriteToFile(path, result, c);
        ///				return true;
        ///			}
        ///			catch(Throwable t) { return false; }	
        ///}
        ///
        ///  public String Serialize() {
        ///
        ///        try {
        ///            Type listType = new TypeToken&lt;*ClassName*&gt;() {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Android_GSON_Serialize {
            get {
                return ResourceManager.GetString("Android_GSON_Serialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static class *ClassName*Serializer implements JsonSerializer&lt;*ClassName*&gt; {
        ///
        ///	    public *ClassName*Serializer() { super(); }
        ///
        ///	    @Override
        ///	    public JsonElement serialize(final *ClassName* value, final Type type, final JsonSerializationContext context) {
        ///	        *ClassName* ret = new *ClassName*();
        ///			final JsonObject jsonObj = new JsonObject();
        ///	        *1-1*
        ///	        return jsonObj;
        ///	    }
        ///}.
        /// </summary>
        internal static string Android_GSON_Serializer {
            get {
                return ResourceManager.GetString("Android_GSON_Serializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static class *ClassName*TypeAdapter extends TypeAdapter&lt;*ClassName*&gt; {
        ///
        ///			@Override
        ///			public *ClassName* read(JsonReader in) throws IOException {
        ///				final *ClassName* data = new *ClassName*();
        ///
        ///			    in.beginObject();
        ///			    while (in.hasNext()) {
        ///			      String s = in.nextName();
        ///			   	*1-1*  
        ///			    *2-2*  
        ///			    in.endObject();
        ///			    return data;
        ///			}
        ///
        ///			@Override
        ///			public void write(JsonWriter out, *ClassName* data) throws IOException {
        ///				out.beginObject();
        ///				*3-3* [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Android_GSON_TypeAdapter {
            get {
                return ResourceManager.GetString("Android_GSON_TypeAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *propType* *propName*; public *propType* get*propName* () { return this.*propName*; } public void set*propName* (*propType* *propName*) { this.*propName* =*propName*; }.
        /// </summary>
        internal static string Android_Property_Pattern {
            get {
                return ResourceManager.GetString("Android_Property_Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static String ReadFromFile(String path, Context c) {
        ///		    String ret = &quot;&quot;;
        ///		    try {
        ///		    	File file = getPublicStorageDir(path);	
        ///		    	if(file.exists()) {
        ///		    		FileInputStream inputStream = new FileInputStream(file);
        ///		    		if ( inputStream != null ) {
        ///		    			InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
        ///		    			BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        ///		    			String receiveString = &quot;&quot;;
        ///		    			StringBuilder stringBui [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Android_Read_from_File {
            get {
                return ResourceManager.GetString("Android_Read_from_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static void WriteToFile(String path, String toWrite,  Context c) {
        ///		    try {	
        ///		    	File file = getPublicStorageDir(path);	
        ///		    	FileOutputStream fos = new FileOutputStream(file);
        ///		        OutputStreamWriter outputStreamWriter = new OutputStreamWriter(fos);
        ///		        outputStreamWriter.write(toWrite);
        ///		        outputStreamWriter.close();
        ///		    }
        ///		    catch (IOException e) { Log.e(&quot;Exception&quot;, &quot;File write failed: &quot; + e.toString()); } 
        ///		}.
        /// </summary>
        internal static string Android_Write_to_File {
            get {
                return ResourceManager.GetString("Android_Write_to_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
        /// android:layout_width=&quot;match_parent&quot;
        /// android:layout_height=&quot;match_parent&quot; &gt;
        ///   *data*
        ///&lt;/LinearLayout&gt; .
        /// </summary>
        internal static string AndroidLinearLayout {
            get {
                return ResourceManager.GetString("AndroidLinearLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
        ///    android:layout_width=&quot;match_parent&quot;
        ///    android:layout_height=&quot;match_parent&quot;
        ///    android:stretchColumns=&quot;1&quot;&gt;
        ///    *rows*
        ///&lt;/TableLayout&gt;.
        /// </summary>
        internal static string AndroidTableLayout {
            get {
                return ResourceManager.GetString("AndroidTableLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;TableRow&gt;
        ///        &lt;TextView	 
        ///			android:text=&quot;*name*&quot;  
        ///			android:gravity=&quot;left&quot; /&gt;
        ///        &lt;TextView
        ///			android:id=&quot;@+id/tv*name*&quot;
        ///            android:gravity=&quot;left&quot; /&gt;
        /// &lt;/TableRow&gt;.
        /// </summary>
        internal static string AndroidTableRow {
            get {
                return ResourceManager.GetString("AndroidTableRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 			&lt;TableRow&gt;
        ///        &lt;TextView	 
        ///			android:text=&quot;*name*&quot;  
        ///			android:gravity=&quot;left&quot; /&gt;
        ///        &lt;TextView
        ///			android:id=&quot;@+id/tv*name*&quot;
        ///			android:text=&quot;@{data.*name*}&quot;
        ///            android:gravity=&quot;left&quot; /&gt;
        /// &lt;/TableRow&gt;.
        /// </summary>
        internal static string AndroidTableRowBinding {
            get {
                return ResourceManager.GetString("AndroidTableRowBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	 &lt;TextView
        ///      android:id=&quot;@+id/tv*name*&quot;
        ///      android:layout_width=&quot;wrap_content&quot;
        ///      android:layout_height=&quot;wrap_content&quot; /&gt;.
        /// </summary>
        internal static string AndroidTextView {
            get {
                return ResourceManager.GetString("AndroidTextView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;TextView
        ///      android:id=&quot;@+id/tv*name*&quot;
        ///      android:layout_width=&quot;wrap_content&quot;
        ///      android:layout_height=&quot;wrap_content&quot;
        ///	  android:text=&quot;@{data.*name*}&quot; /&gt;.
        /// </summary>
        internal static string AndroidTextViewBinding {
            get {
                return ResourceManager.GetString("AndroidTextViewBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using *NS*.Data;
        ///using Microsoft.AspNetCore.Components;
        ///using System.Collections.Generic;
        ///using System.Net.Http;
        ///using System.Net.Http.Json;
        ///using System.Threading.Tasks;
        ///
        ///namespace *NS*.Client.Components
        ///{
        ///    public class AddEdit*CL*Base : ComponentBase
        ///    {
        ///        [Inject]
        ///        HttpClient Http { get; set; }
        ///
        ///        [Inject]
        ///        public NavigationManager NavigationManager { get; set; }
        ///
        ///        [Parameter]
        ///        public int Id { get; set; }
        ///
        ///        protected string Title = &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorAddEditForm {
            get {
                return ResourceManager.GetString("BlazorAddEditForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @page &quot;/*CLLOWER*/add&quot;
        ///@page &quot;/*CLLOWER*/edit/{Id:int}&quot;
        ///@inherits AddEdit*CL*Base
        ///
        ///&lt;h1&gt;@Title *CL*&lt;/h1&gt;
        ///&lt;hr/&gt;
        ///&lt;EditForm Model=&quot;@data&quot; OnValidSubmit=&quot;Save*CL*&quot;&gt;
        ///    &lt;DataAnnotationsValidator /&gt;
        ///    *PROPS*
        ///    &lt;div class=&quot;form-group&quot;&gt;
        ///        &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Save&lt;/button&gt;
        ///        &lt;button class=&quot;btn btn-light&quot; @onclick=&quot;Cancel&quot;&gt;Cancel&lt;/button&gt;
        ///    &lt;/div&gt;
        ///&lt;/EditForm&gt;.
        /// </summary>
        internal static string BlazorAddEditRazor {
            get {
                return ResourceManager.GetString("BlazorAddEditRazor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.EntityFrameworkCore;
        ///using Microsoft.EntityFrameworkCore.Infrastructure;
        ///using Microsoft.EntityFrameworkCore.Storage;
        ///using *NS*.Data;
        ///
        ///#nullable disable
        ///
        ///namespace *NS*.Server.Models
        ///{
        ///    public partial class AppDBContext : DbContext
        ///    {
        ///        public AppDBContext(DbContextOptions&lt;AppDBContext&gt; options): base(options)
        ///        {
        ///            if (options != null)
        ///            {
        ///                var creator = (RelationalDatabaseCreator)this.Database.GetService&lt;ID [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorAppDBContext {
            get {
                return ResourceManager.GetString("BlazorAppDBContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Server
        ///    //.csproj
        ///        &lt;ItemGroup&gt;
        ///            &lt;PackageReference Include=&quot;Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore&quot; Version=&quot;3.1.1&quot; /&gt;
        ///            &lt;PackageReference Include = &quot;Microsoft.AspNetCore.Identity.EntityFrameworkCore&quot; Version = &quot;3.1.1&quot; /&gt;
        ///            &lt;PackageReference Include = &quot;Microsoft.AspNetCore.Identity.UI&quot; Version = &quot;3.1.1&quot; /&gt;
        ///            &lt;PackageReference Include = &quot;Microsoft.EntityFrameworkCore.Sqlite&quot; Version = &quot;3.1.6&quot; /&gt;
        ///            &lt;PackageReference Include = &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorConfig {
            get {
                return ResourceManager.GetString("BlazorConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using *NS*.Server.Interfaces;
        ///using *NS*.Data;
        ///using Microsoft.AspNetCore.Mvc;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///
        ///namespace *NS*.Server.Controllers
        ///{
        ///    [Route(&quot;api/[controller]&quot;)]
        ///    [ApiController]
        ///    public class *CL*Controller : ControllerBase
        ///    {
        ///        private readonly I*CL*Repository _dataService;
        ///
        ///        public *CL*Controller(I*CL*Repository dataService)
        ///        {
        ///            _dataService = dataService;
        ///        }
        ///
        ///        [H [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorController {
            get {
                return ResourceManager.GetString("BlazorController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using *NS*.Server.Interfaces;
        ///using *NS*.Data;
        ///using *NS*.Server.Models;
        ///using Microsoft.EntityFrameworkCore;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///namespace *NS*.Server.DataAccess
        ///{
        ///    public class *CL*DataAccessLayer : I*CL*Repository
        ///    {
        ///        AppDBContext _dbContext = null;
        ///
        ///        public *CL*DataAccessLayer(AppDBContext dbContext)
        ///        {
        ///            _dbContext = dbContext;
        ///        }
        ///
        ///        public List&lt;*CL*Data&gt; ReadAll()
        ///        {
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorDataAccessLayer {
            get {
                return ResourceManager.GetString("BlazorDataAccessLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using *NS*.Data;
        ///using Microsoft.AspNetCore.Components;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Net.Http;
        ///using System.Net.Http.Json;
        ///using System.Threading.Tasks;
        ///
        ///namespace *NS*.Client.Components
        ///{
        ///    public class *CL*DataBase : ComponentBase
        ///    {
        ///        [Inject]
        ///        HttpClient Http { get; set; }
        ///
        ///        protected List&lt;*CL*Data&gt; lst = new();
        ///        protected List&lt;*CL*Data&gt; lstSearch = new();
        ///        protected *CL*Data data = new();
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorDataComponent {
            get {
                return ResourceManager.GetString("BlazorDataComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @page &quot;/fetch*CLLOWER*&quot;
        ///@inherits *CL*DataBase
        ///
        ///&lt;h1&gt;*CL* Data&lt;/h1&gt;
        ///&lt;div class=&quot;row&quot;&gt;
        ///    &lt;div class=&quot;col-md-4&quot;&gt;
        ///        &lt;a href=&apos;/*CLLOWER*/add&apos; class=&quot;btn btn-primary&quot; role=&quot;button&quot;&gt;&lt;i class=&quot;fa fa-user-plus&quot;&gt;&lt;/i&gt; Add *CL*&lt;/a&gt;
        ///    &lt;/div&gt;
        ///    &lt;div class=&quot;input-group col-md-4 offset-md-4&quot;&gt;
        ///        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search *CLLOWER* by name&quot; @bind=&quot;SearchString&quot; @bind:event=&quot;oninput&quot; @onkeyup=&quot;Filter*CL*&quot; /&gt;
        ///        &lt;div class=&quot;input-group-append&quot;&gt;
        ///            &lt;bu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorDataComponentRazor {
            get {
                return ResourceManager.GetString("BlazorDataComponentRazor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @page &quot;/*CL*Edit&quot;
        ///
        ///@inject *CL*Service service
        ///@inject NavigationManager UriHelper
        ///
        ///@if(service.data != null)
        ///{
        ///    &lt;p&gt;&lt;em&gt;*CL*&lt;/em&gt;&lt;/p&gt;  
        ///    &lt;div&gt;
        ///        *Data*
        ///    &lt;/div&gt;
        ///    &lt;div&gt;
        ///        &lt;button @onclick=&quot;Submit&quot;&gt;Submit&lt;/button&gt;
        ///    &lt;/div&gt;
        ///}
        ///
        ///@code {
        ///    public void Submit()
        ///    {
        ///        UriHelper.NavigateTo(&quot;/*CL*List&quot;);
        ///    }
        ///}.
        /// </summary>
        internal static string BlazorEditView {
            get {
                return ResourceManager.GetString("BlazorEditView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Server
        ///    //Startup
        ///    services.AddDbContextPool&lt;AppDBContext&gt;(options =&gt;
        ///            {
        ///                var connetionString = Configuration.GetConnectionString(&quot;DefaultConnection&quot;);
        ///                options.UseMySql(connetionString, ServerVersion.AutoDetect(connetionString));
        ///            });
        ///          
        ///    services.AddTransient&lt;I*CL*Repository, *CL*DataAccessLayer&gt;();
        ///
        ///
        ///
        /////.csproj
        ///&lt;ItemGroup&gt;
        ///    &lt;PackageReference Include=&quot;Microsoft.AspNetCore.Components.WebAssembly.Server&quot; Version=&quot;5.0.9&quot;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BlazorEFCoreConfig {
            get {
                return ResourceManager.GetString("BlazorEFCoreConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///
        ///namespace *NS*.Server.Interfaces
        ///{
        ///    public interface IDataRepository&lt;T&gt;
        ///    {
        ///        T Create(T data);
        ///        T Read(int id);
        ///        T Update(T data);
        ///        T Delete(int id);
        ///        List&lt;T&gt; ReadAll();
        ///    }
        ///}.
        /// </summary>
        internal static string BlazorIDataRepository {
            get {
                return ResourceManager.GetString("BlazorIDataRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #region *EventName* Event Arguments
        ///	 
        ///	public event EventHandler&lt;*EventName*EventArgs&gt; Raise*EventName*Event;
        ///    protected virtual void OnRaise*EventName*Event(*EventName*EventArgs e)   // Wrap event invocations inside a protected virtual method to allow derived classes to override the event invocation behavior 
        ///    {
        ///       EventHandler&lt;*EventName*EventArgs&gt; handler = Raise*EventName*Event; // Make a temporary copy of the event to avoid possibility of a race condition if the last subscriber unsubscr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CS_Event_Pattern {
            get {
                return ResourceManager.GetString("CS_Event_Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	#region *EventName* Event Arguments
        ///	 
        ///    public class *EventName*EventArgs : EventArgs
        ///    {
        ///        public *EventName*EventArgs() { }
        ///        
        ///		private *EventName* _data;
        ///        public *EventName* data
        ///        {
        ///            get { return _data; }
        ///            set { _data = value; }
        ///        }
        ///    }
        ///
        ///
        ///        public event EventHandler&lt;*EventName*EventArgs&gt; Raise*EventName*Event;
        ///        protected virtual void OnRaise*EventName*Event(*EventName*EventArgs e)   // Wrap event invocations ins [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CS_Event_Pattern2 {
            get {
                return ResourceManager.GetString("CS_Event_Pattern2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Runtime.Serialization;
        ///using System.Collections.ObjectModel;
        ///
        ///namespace *NS*
        ///{
        ///
        ///    public class *CL*
        ///    {
        ///        public *CL*() { }
        ///
        ///        *PROP*
        ///
        ///		*ISerializable*
        ///
        ///        *ENUM*
        ///    }
        ///
        ///    public class *CL*List : ObservableCollection&lt;*CL*&gt;
        ///    {
        ///        public *CL*List() {  }
        ///        public *CL*List(IEnumerable&lt;*CL*&gt; lst) {  }
        ///
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string csDataTemplate {
            get {
                return ResourceManager.GetString("csDataTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using System.Collections.Generic;
        ///using AutomationControls.Interfaces;
        ///
        ///namespace *NS*
        ///{
        ///
        ///    public class *CL* : AutomationControls.BaseClasses.ObjectSerializationWrapper&lt;*CL*&gt;
        ///    {
        ///        public *CL*() { }
        ///
        ///        *PROP*
        ///
        ///        public override string ToString() { return profileName; }
        ///    }
        ///
        ///    public class *CL*List : AutomationControls.Lists.Abstract.ObservableCollectionObjSerializationWrapper&lt;*CL*&gt;, IProfileName
        ///    {
        ///        public *CL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string csDataTemplate2 {
            get {
                return ResourceManager.GetString("csDataTemplate2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;UserControl x:Class=&quot;*NS*.*ClassName*Control&quot;
        ///             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        ///             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        ///             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; 
        ///             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; 
        ///			 xmlns:convert=&quot;clr-namespace:AutomationControls.WPF.Converters;assembly=PD_ClassLibrary&quot;
        ///             xmlns:local=&quot;clr-namespace:*NS*&quot;&gt;
        ///    &lt;StackP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataControlXAML {
            get {
                return ResourceManager.GetString("DataControlXAML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package *class*;
        ///
        ///import android.app.Fragment;
        ///import android.os.Bundle;
        ///import android.view.LayoutInflater;
        ///import android.view.View;
        ///import android.view.View.OnFocusChangeListener;
        ///import android.view.ViewGroup;
        ///import android.widget.Button;
        ///import android.widget.EditText;
        ///import android.widget.TextView;
        ///import java.util.ArrayList;
        ///
        ///public class *class*Fragment extends Fragment {
        ///
        ///    View v;
        ///	Button btnCommitChanges = null;
        ///	
        ///	//TextView tv*name* = null;
        ///	*s1*
        ///	OnFocusChangeListener o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataEditorFragment {
            get {
                return ResourceManager.GetString("DataEditorFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///
        ///namespace *NS*.Extensions
        ///{
        ///    public static class SerializationExtensions
        ///    {
        ///        public static string ToCSV&lt;T&gt;(this IEnumerable&lt;T&gt; lst)
        ///        {
        ///            String s = &quot;&quot;;
        ///            foreach (var v in lst) s = s.Remove(s.Length - 1);
        ///            return s;
        ///        }
        ///
        ///        public static List&lt;string&gt; FromCSV(this string csv)         
        ///        {
        ///            if (csv == null) csv = &quot;&quot;;
        ///            List&lt;string&gt; ret = new List&lt;string&gt;(); [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EFCoreSerializationExtensions {
            get {
                return ResourceManager.GetString("EFCoreSerializationExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using Microsoft.EntityFrameworkCore;
        ///
        ///namespace *NS*.Components
        ///{
        ///    public class *CL*Service
        ///    {
        ///        #region Property
        ///        private readonly *CL*DbContext context;
        ///        #endregion
        ///
        ///        #region Constructor
        ///        public *CL*Service(*CL*DbContext Context)
        ///        {
        ///            context = Context;
        ///        }
        ///        #endregion
        ///
        ///        #region Get List of *CL*
        ///        public as [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EFCoreService {
            get {
                return ResourceManager.GetString("EFCoreService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   using System.Windows.Markup;
        ///  
        ///  public class EnumBindingSourceExtension : MarkupExtension
        ///    {
        ///        private Type _enumType;
        ///        public Type EnumType
        ///        {
        ///            get { return this._enumType; }
        ///            set
        ///            {
        ///                if (value != this._enumType)
        ///                {
        ///                    if (null != value)
        ///                    {
        ///                        Type enumType = Nullable.GetUnderlyingType(value) ?? value;
        ///                        if (!enumType.IsEnum) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EnumBindingSource {
            get {
                return ResourceManager.GetString("EnumBindingSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	public class *CL*Adapter extends ArrayAdapter&lt;*CL*&gt; {
        ///    public *CL*Adapter(Context context, ArrayList&lt;*CL*&gt; users) {
        ///       super(context, 0, users);
        ///    }
        ///
        ///    @Override
        ///    public View getView(int position, View convertView, ViewGroup parent) {
        ///       *CL* data = getItem(position);    
        ///       if (convertView == null) {
        ///          convertView = LayoutInflater.from(getContext()).inflate(R.layout.*lower*, parent, false);
        ///       }
        ///
        ///       *lst*
        ///
        ///       return convertView;
        ///   }
        ///}.
        /// </summary>
        internal static string JavaListAdapter {
            get {
                return ResourceManager.GetString("JavaListAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package *namespaceName*
        ///
        ///import android.support.v4.app.Fragment
        ///import android.os.Bundle
        ///import android.view.*
        ///import android.widget.*
        ///
        ///
        ///class *CL*Fragment : Fragment() {
        ///
        ///	private lateinit var data : *CL*
        ///    private lateinit var v: View
        ///
        ///    *PROP*
        ///
        ///    internal var DataReadyListeners = ArrayList&lt;DataReadyListener&gt;()
        ///    
        ///	override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?): View? {
        ///        v = inflater!!.inflate(R.layout.*classNameLow [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KotlinFragment {
            get {
                return ResourceManager.GetString("KotlinFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;UserControl x:Class=&quot;*NS*.*ClassName*ListControl&quot;
        ///             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        ///             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        ///             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; 
        ///             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; 
        ///			 xmlns:convert=&quot;clr-namespace:AutomationControls.WPF.Converters;assembly=PD_ClassLibrary&quot;
        ///             xmlns:local=&quot;clr-namespace:*NS*&quot;&gt;
        ///    &lt;Da [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ListControl {
            get {
                return ResourceManager.GetString("ListControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //.csproj
        ///&lt;ItemGroup&gt;
        ///    &lt;PackageReference Include=&quot;Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore&quot; Version=&quot;3.1.1&quot; /&gt;
        ///    &lt;PackageReference Include = &quot;Microsoft.AspNetCore.Identity.EntityFrameworkCore&quot; Version = &quot;3.1.1&quot; /&gt;
        ///    &lt;PackageReference Include = &quot;Microsoft.AspNetCore.Identity.UI&quot; Version = &quot;3.1.1&quot; /&gt;
        ///    &lt;PackageReference Include = &quot;Microsoft.EntityFrameworkCore.Sqlite&quot; Version = &quot;3.1.6&quot; /&gt;
        ///    &lt;PackageReference Include = &quot;Microsoft.EntityFrameworkCore.SqlServer&quot; Version = &quot;3.1.1&quot; /&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcConfig {
            get {
                return ResourceManager.GetString("MvcConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConnectionStrings&quot;: {
        ///    &quot;*prop*&quot;: &quot;Server=Gamma\\DB;DataBase=*prop*;User Id=Entropy;Password=En3123123;&quot;
        ///    }.
        /// </summary>
        internal static string MvcConnectionString {
            get {
                return ResourceManager.GetString("MvcConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Diagnostics;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.Extensions.Logging;
        ///using *NS*.Data;
        ///using *NS*.Models;
        ///using *NS*.Repository;
        ///
        ///namespace *NS*.Controllers
        ///{ 
        ///    [ApiController]
        ///    [Route(&quot;[controller]&quot;)]
        ///    public class *CL*Controller : Controller
        ///    {
        ///        private readonly ILogger&lt;*CL*Controller&gt; _logger;
        ///        
        ///        public *CL*Controller(ILogger&lt;*CL*Cont [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcController {
            get {
                return ResourceManager.GetString("MvcController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Diagnostics;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Microsoft.Extensions.Logging;
        ///using *NS*.Data;
        ///using *NS*.Models;
        ///using *NS*.Repository;
        ///
        ///namespace *NS*.Controllers
        ///{
        ///    public class *CL*Controller : Controller
        ///    {
        ///        private readonly ILogger&lt;*CL*Controller&gt; _logger;
        ///        private IDataRepository&lt;*CL*&gt; db { get; set; }
        ///        
        ///        public *CL*Controller(ILogger&lt;*CL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcControllerEF {
            get {
                return ResourceManager.GetString("MvcControllerEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model *NS*.Models.*CL*
        ///
        ///@{
        ///    ViewData[&quot;Title&quot;] = &quot;*CL*&quot;;
        ///}
        ///
        ///&lt;form asp-controller=&quot;*CL*&quot; asp-action=&quot;create&quot; method=&quot;post&quot;&gt;
        ///*ENUM*
        ///    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; asp-controller=&quot;*CL*&quot; asp-action=&quot;create&quot; &gt;Create&lt;/button&gt;
        ///&lt;/form&gt;.
        /// </summary>
        internal static string MvcCreateView {
            get {
                return ResourceManager.GetString("MvcCreateView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using *NS*.Data;
        ///using *NS*.Models;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///namespace *NS*.Repository
        ///{
        ///    public class *CL*Repository : IDataRepository&lt;*CL*&gt;
        ///    {
        ///        private readonly *CL*DbContext context;
        ///        public *CL*Repository(*CL*DbContext context)
        ///        {
        ///            this.context = context;
        ///            context.Database.EnsureCreated();
        ///        }
        ///
        ///        public *CL* Create(*CL* data)
        ///        {
        ///            context.Add(data);
        ///            context.SaveChange [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcDataRepository {
            get {
                return ResourceManager.GetString("MvcDataRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
        ///using Microsoft.EntityFrameworkCore;
        ///using *NS*.Models;
        ///using *NS*.Extensions;
        ///
        ///namespace *NS*.Data
        ///{
        ///    public class *CL*DbContext : DbContext
        ///    {
        ///        public DbSet&lt;*CL*&gt; data { get; set; }
        ///
        ///        public *CL*DbContext()  {  }
        ///
        ///        public *CL*DbContext(DbContextOptions&lt;*CL*DbContext&gt; options)
        ///            : base(options)
        ///        {
        ///        }
        ///
        ///        protected override void OnModelCreating(ModelBuilder builder)
        ///        {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcDbContext {
            get {
                return ResourceManager.GetString("MvcDbContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model *NS*.Models.*CL*
        ///
        ///@{
        ///    ViewData[&quot;Title&quot;] = &quot;*CL*&quot;;
        ///}
        ///
        ///*ENUM*.
        /// </summary>
        internal static string MvcEditView {
            get {
                return ResourceManager.GetString("MvcEditView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///
        ///namespace *NS*.Repository
        ///{
        ///    public interface IDataRepository&lt;T&gt;
        ///    {
        ///        T Create(T data);
        ///        T Read(int id);
        ///        T Update(T data);
        ///        T Delete(int id);
        ///        List&lt;T&gt; ReadAll();
        ///    }
        ///}.
        /// </summary>
        internal static string MvcIDataRepository {
            get {
                return ResourceManager.GetString("MvcIDataRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model List&lt;*NS*.Models.*CL*&gt;
        ///    &lt;form&gt;      
        ///        &lt;button type=&quot;submit&quot;  class=&quot;btn btn-primary&quot; asp-controller=&quot;*CL*&quot; asp-action=&quot;create&quot;&gt;Create&lt;/button&gt;
        ///        &lt;table&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    *PROP*
        ///                &lt;/tr&gt;
        ///            &lt;/thead&gt;
        ///            &lt;tbody&gt;
        ///                @foreach (var v in Model)
        ///                {
        ///                &lt;tr&gt;
        ///                    *props2*
        ///                    &lt;td&gt;&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; asp-action= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MvcMainCshtml {
            get {
                return ResourceManager.GetString("MvcMainCshtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ComponentModel.DataAnnotations.Schema;
        ///using *NS*.Extensions; 
        ///
        ///namespace *NS*.Models        
        ///{
        ///
        ///	*ENUM*
        ///
        ///    //[Table(&quot;*CL*&quot;)]
        ///    public class *CL* 
        ///    {
        ///        public *CL*()   {  }
        ///        
        ///        *PROP*
        ///
        ///    }
        ///}
        ///
        ///.
        /// </summary>
        internal static string MvcModel {
            get {
                return ResourceManager.GetString("MvcModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ComponentModel.DataAnnotations.Schema;
        ///using *NS*.Extensions; 
        ///
        ///namespace *NS*.Models        
        ///{
        ///
        ///	*ENUM*
        ///
        ///    //[Table(&quot;*CL*&quot;)]
        ///    public class *CL* 
        ///    {
        ///        public *CL*()   {  }
        ///        
        ///        *PROP*
        ///
        ///    }
        ///}
        ///
        ///.
        /// </summary>
        internal static string MvcModelEF {
            get {
                return ResourceManager.GetString("MvcModelEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.EntityFrameworkCore;
        ///using *NS*.Models;
        ///
        ///namespace *NS*.Extensions
        ///{
        ///    public static class *CL*Extensions
        ///    {
        ///        public static void Seed*CL*(this ModelBuilder builder)
        ///        {
        ///            builder.Entity&lt;*CL*&gt;().HasData(
        ///               new *CL*
        ///               {
        ///                   Id = 1
        ///               });
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string MvcSeedExtension {
            get {
                return ResourceManager.GetString("MvcSeedExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model *NS*.Models.*CL*
        ///
        ///@{
        ///    ViewData[&quot;Title&quot;] = &quot;*CL*&quot;;
        ///}
        ///
        ///&lt;form asp-controller=&quot;*CL*&quot; asp-action=&quot;create&quot; method=&quot;post&quot;&gt;
        ///*ENUM*
        ///    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; asp-controller=&quot;*CL*&quot; asp-action=&quot;update&quot; &gt;Update&lt;/button&gt;
        ///&lt;/form&gt;.
        /// </summary>
        internal static string MvcUpdateView {
            get {
                return ResourceManager.GetString("MvcUpdateView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class *ClassName*List : AutomationControls.Lists.Abstract.ObservableCollectionObjSerializationWrapper&lt;*ClassName*&gt;  , IProfileName    {
        ///        private string _defaultSerializationPath;
        ///        public override string defaultSerializationPath
        ///        {
        ///            get { return _defaultSerializationPath; }
        ///            set { _defaultSerializationPath = value; }
        ///        }
        ///        public *ClassName*List() : base() { Initialize(); }
        ///        public *ClassName*List(IEnumerable&lt;*ClassName*&gt; lst) : bas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ObservableCollectionSerializationWrapperImplementation {
            get {
                return ResourceManager.GetString("ObservableCollectionSerializationWrapperImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;data&gt;
        ///   &lt;variable name=&quot;dataBinding&quot; type=&quot;*NameSpace*.*Class*&quot; /&gt;
        ///&lt;/data&gt;.
        /// </summary>
        internal static string PropertyBindingXML {
            get {
                return ResourceManager.GetString("PropertyBindingXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using AutomationControls.Extensions;
        ///using AutomationControls.Interfaces;
        ///using AutomationControls.BaseClasses;
        ///using AutomationControls.Lists.Abstract;
        ///using AutomationControls.Attributes;
        ///using System.Collections.Generic;
        ///using System.IO.Ports;
        ///using System.Runtime.Serialization;
        ///using System.Collections.ObjectModel;
        ///using System.Threading.Tasks;
        ///using System.Threading;
        ///using System.Linq;
        ///using System.Windows.Controls;
        ///
        ///namespace *NS*        
        ///{
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SerializableDataClass {
            get {
                return ResourceManager.GetString("SerializableDataClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using System.Collections.Generic;
        ///using System.IO.Ports;
        ///using System.Runtime.Serialization;
        ///using System.Collections.ObjectModel;
        ///using System.Threading.Tasks;
        ///using System.Threading;
        ///using System.Linq;
        ///using System.Windows.Controls;
        ///using AutomationControls.Attributes;
        ///using AutomationControls.Interfaces;
        ///using AutomationControls.Extensions;
        ///
        ///namespace *NS*        
        ///{
        ///
        ///	*ENUM*
        ///
        ///    [Serializable]
        ///    [DataProfile(typeof(*NS*.*CL*Control))]
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SerializationSurrogate {
            get {
                return ResourceManager.GetString("SerializationSurrogate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Windows.Controls;
        ///
        ///namespace *NS*
        ///{
        ///
        ///    public partial class *ClassName*ListControl : UserControl
        ///    {
        ///
        ///        public *ClassName*ListControl()  : base()
        ///        {
        ///            InitializeComponent();
        ///			dg.Items.Clear();
        ///        }
        ///
        ///		 public *ClassName*List GetSelectedItems()
        ///        {
        ///            *ClassName*List lst = new *ClassName*List();
        ///            foreach (*ClassName* v in dg.SelectedItems) { lst.Add(v); }
        ///            return lst;
        ///        }
        ///
        ///        public *ClassName* [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserControlListTemplate {
            get {
                return ResourceManager.GetString("UserControlListTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Windows.Controls;
        ///
        ///namespace *NS*
        ///{
        ///
        ///    public partial class *ClassName*Control : UserControl
        ///    {
        ///
        ///        public *ClassName*Control()  : base()
        ///        {
        ///            InitializeComponent();
        ///        }
        ///
        ///
        ///    }
        ///}.
        /// </summary>
        internal static string UserControlTemplate {
            get {
                return ResourceManager.GetString("UserControlTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using System.Collections.Generic;
        ///using System.Runtime.Serialization;
        ///using System.Collections.ObjectModel;
        ///using Xamarin.Forms.Internals;
        ///
        ///namespace *NS*        
        ///{
        ///
        ///	*ENUM*
        ///
        ///    [Serializable]
        ///    public class *CL* : *implement*
        ///    {
        ///        public *CL*() 
        ///        {
        ///            Initialize();
        ///        }
        ///
        ///        private void Initialize() { *init* }
        ///
        ///        *PROP*
        ///
        ///        *ISerializable*
        ///
        ///		//public void Serialize(string s)
        ///        //{
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XamarinDataClass {
            get {
                return ResourceManager.GetString("XamarinDataClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;ContentPage xmlns=&quot;http://xamarin.com/schemas/2014/forms&quot;
        ///             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;
        ///             xmlns:d=&quot;http://xamarin.com/schemas/2014/forms/design&quot;
        ///             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;
        ///             mc:Ignorable=&quot;d&quot;
        ///             x:Class=&quot;*namespace*.*class*Control&quot;
        ///             Title=&quot;*class*&quot;&gt;
        ///    &lt;ContentPage.Content&gt;
        ///     &lt;ScrollView&gt;
        ///        &lt;Grid&gt;
        ///        *conte [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XamarinXamlBase {
            get {
                return ResourceManager.GetString("XamarinXamlBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Xamarin.Forms;
        ///
        ///namespace *NS*
        ///{
        ///    public partial class *ClassName*Control : ContentPage
        ///    {
        ///
        ///        public *ClassName*Control()  : base()
        ///        {
        ///            InitializeComponent();
        ///        }
        ///
        ///        *methods*
        ///    }
        ///}.
        /// </summary>
        internal static string XamarinXamlCs {
            get {
                return ResourceManager.GetString("XamarinXamlCs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;ContentPage xmlns=&quot;http://xamarin.com/schemas/2014/forms&quot;
        ///             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        ///             x:Class=&quot;*namespace*.*class*Control&quot;
        ///             Title=&quot;*class*&quot;&gt;
        ///  &lt;ListView x:Name=&quot;lv*class*&quot; ItemsSource=&quot;{Binding}&quot;&gt;
        ///  &lt;ListView.Header&gt;
        ///    &lt;StackLayout Orientation=&quot;Horizontal&quot; &gt;
        ///        &lt;Button x:Name=&quot;btnAdd&quot; Text=&quot;Add&quot; Clicked=&quot;btnAdd_Clicked&quot; /&gt;
        ///    &lt;/StackLayout&gt;
        ///  &lt;/ListView.Header&gt;
        ///  &lt;ListView.ItemTemplat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XamarinXamlListBase {
            get {
                return ResourceManager.GetString("XamarinXamlListBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;UserControl xmlns:UserControls=&quot;clr-namespace:*NS*&quot;              
        ///             x:Class=&quot;*NS*.*CL*Control&quot;
        ///             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
        ///             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
        ///             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; 
        ///             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; 
        ///             xmlns:conv=&quot;clr-namespace:AutomationControls.WPF.Converters;assembly=PD_ClassLi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XamlAllItems {
            get {
                return ResourceManager.GetString("XamlAllItems", resourceCulture);
            }
        }
    }
}
